        /// <summary>
        /// Delete existing items by {2} and then insert new items
        /// </summary>
        /// <remarks>
        /// </remarks>
        /// <param name={0}{2}{0}></param>
        /// <param name={0}items{0}></param>
        /// <returns>Updated item</returns>
        /// <response code={0}204{0}>Items Inserted</response>
        /// <response code={0}400{0}>If the model is invalid</response> 
        /// <response code={0}500{0}>Error Occurred</response>  
        [HttpPost({0}InsertListBy{2}{0})]
        [ProducesResponseType(204)]
        [ProducesResponseType(400)]
        [ProducesResponseType(500)]
        //[ValidateAntiForgeryToken]
        public IActionResult InsertListBy{2}(Guid {2}, [FromBody] List<Guid> items)
        <1>
            if (ModelState.IsValid)
            <1>
                try
                <1>
                    // แก้ตรงนี้ เป็นคู่ของมันเอง
                    _repository.Insert<<XXX>>List({2}, items);

                    return NoContent();
                <2>
                catch (Exception ex)
                <1>
                    _logger.LogCritical(${0}Exception while inserting {1} list.{0}, ex);
                    return StatusCode(500, ${0}Exception while inserting {1} list. <1>ex.Message<2>{0});
                <2>
            <2>

            return BadRequest(ModelState);
        <2>		

        /// <summary>
        /// Get list items by {2}
        /// </summary>
        /// <remarks>
        /// </remarks>
        /// <returns>Return list of items by {2}</returns>
        /// <response code={0}200{0}>Returns the item</response>
        /// <response code={0}500{0}>Error Occurred</response>  
        [HttpGet({0}GetListBy{2}{0})]
        [ProducesResponseType(typeof(List<{1}ViewModel>), 200)]
        [ProducesResponseType(400)]
        [ProducesResponseType(500)]
        //[ValidateAntiForgeryToken]
        public IActionResult GetListBy{2}(Guid? {2})
        <1>
            try
            <1>
                return Ok(_repository.GetListBy{2}({2}));
            <2>
            catch (Exception ex)
            <1>
                _logger.LogCritical(${0}Exception while get list of items.{0}, ex);
                return StatusCode(500, ${0}Exception while get list of items. <1>ex.Message<2>{0});
            <2>
        <2>